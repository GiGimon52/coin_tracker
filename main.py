# from datetime import datetime
# from fetcher import BitcoinPriceFetcher
#
#
#
# # ===== –ó–∞–ø—É—Å–∫ =====
# def main():
#     now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
#     fetcher = BitcoinPriceFetcher()
#     price = fetcher.get_price()
#
#     if price:
#         print(f"[{now}] BTC: {price:.2f} USD")
#     else:
#         print(f"[{now}] ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É.")
#
# if __name__ == "__main__":
#     main()



# from datetime import datetime
# from fetcher import BitcoinPriceFetcher
#
# def main():
#     # –í—ã–±–µ—Ä–∏ –ª—é–±—É—é –º–æ–Ω–µ—Ç—É, –∫–æ—Ç–æ—Ä—É—é –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –æ–±–µ API
#     coin_id = "ethereum"
#     ticker_id = "eth-ethereum"
#
#     now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
#     fetcher = BitcoinPriceFetcher(coin_id=coin_id, ticker_id=ticker_id)
#     price = fetcher.get_price()
#
#     if price:
#         print(f"[{now}] {coin_id.upper()}: {price:.2f} USD")
#     else:
#         print(f"[{now}] ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É –¥–ª—è {coin_id.upper()}.")
#
# if __name__ == "__main__":
#     main()


# from datetime import datetime
# from fetcher import BitcoinPriceFetcher
# from utils.coin_mapper import get_coin_ids
#
# def get_crypto_price(coin_name: str):
#     ids = get_coin_ids(coin_name)
#
#     if not ids:
#         print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ ID –º–æ–Ω–µ—Ç—ã: {coin_name}")
#         return
#
#     coin_id, ticker_id = ids
#     fetcher = BitcoinPriceFetcher(coin_id=coin_id, ticker_id=ticker_id)
#     price = fetcher.get_price()
#
#     now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
#     if price:
#         print(f"[{now}] {coin_name.upper()}: {price:.2f} USD")
#     else:
#         print(f"[{now}] ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É –¥–ª—è {coin_name.upper()}.")
#
# if __name__ == "__main__":
#     get_crypto_price("bittensor")  # üëà –ü—Ä–æ—Å—Ç–æ –∏–º—è –º–æ–Ω–µ—Ç—ã

# from coin_lookup.mapper import CoinMapper
# from fetcher import CryptoPriceFetcher  # –µ—Å–ª–∏ —Ç—ã –Ω–µ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–ª
#
# if __name__ == "__main__":
#     mapper = CoinMapper()
#
#     user_input = input("–í–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–Ω–µ—Ç—ã: ").strip()
#
#     coin_id, ticker_id = mapper.get_ids_by_symbol(user_input)
#
#     if not coin_id or not ticker_id:
#         print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å ID –º–æ–Ω–µ—Ç—ã.")
#     else:
#         fetcher = CryptoPriceFetcher(coin_id=coin_id, ticker_id=ticker_id)
#         price = fetcher.get_price()
#
#         if price:
#             print(f"üí∞ {user_input.upper()} = {price:.2f} USD")
#         else:
#             print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É.")

from coin_lookup.mapper import CoinMapper
from fetcher import CryptoPriceFetcher
from datetime import datetime

if __name__ == "__main__":
    mapper = CoinMapper()

    user_input = input("–í–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–Ω–µ—Ç—ã: ").strip()

    if not user_input:
        print("‚ö†Ô∏è –í—ã –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤–µ–ª–∏.")
        exit()

    coin_id, ticker_id = mapper.get_ids_by_symbol(user_input)

    if not coin_id or not ticker_id:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å ID –º–æ–Ω–µ—Ç—ã.")
    else:
        fetcher = CryptoPriceFetcher(coin_id=coin_id, ticker_id=ticker_id)
        price = fetcher.get_price()

        if price:
            now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            print(f"[{now}] üí∞ {user_input.upper()} = {price:.2f} USD")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É.")